% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sparkline_helper.R
\name{spark_options_line}
\alias{spark_options_line}
\title{Create sparkline options js to include in column call back}
\usage{
spark_options_line(defaultPixelsPerValue = NULL, spotColor = NULL,
  minSpotColor = NULL, maxSpotColor = NULL, spotRadius = NULL,
  valueSpots = NULL, highlightSpotColor = NULL, highlightLineColor = NULL,
  lineWidth = NULL, normalRangeMin = NULL, normalRangeMax = NULL,
  drawNormalOnTop = NULL, xvalues = NULL, chartRangeClip = NULL,
  chartRangeMinX = NULL, chartRangeMaxX = NULL, ...)
}
\arguments{
\item{defaultPixelsPerValue}{Defaults to 3 pixels of width for each value in the chart}

\item{spotColor}{The CSS colour of the final value marker. Set to false or an empty string to hide it}

\item{minSpotColor}{The CSS colour of the marker displayed for the mimum value. Set to false or an empty string to hide it}

\item{maxSpotColor}{The CSS colour of the marker displayed for the maximum value. Set to false or an empty string to hide it}

\item{spotRadius}{Radius of all spot markers, In pixels (default: 1.5) - Integer}

\item{valueSpots}{Specifies which points to draw spots on, and with which colour. Accepts a range. For example, to render green spots on all values less than 50 and red on values higher use {':49': 'green, '50:': 'red'}}

\item{highlightSpotColor}{Specifies a colour for the spot that appears on a value when moused over. Set to null to disable}

\item{highlightLineColor}{Specifies a colour for the vertical line that appears through a value when moused over. Set to null to disable.}

\item{lineWidth}{In pixels (default: 1) - Integer}

\item{normalRangeMin}{Specify threshold values between which to draw a bar to denote the "normal" or}

\item{normalRangeMax}{expected range of values. For example the green bar here  might denote a normal operating temperature range}

\item{drawNormalOnTop}{By default the normal range is drawn behind the fill area of the chart. Setting this option to true causes it to be drawn over the top of the fill area}

\item{xvalues}{See below}

\item{chartRangeClip}{If true then the y values supplied to plot will be clipped to fall between chartRangeMin and chartRangeMax - By default chartRangeMin/Max just ensure that the chart spans at least that range of values, but does not constrain it}

\item{chartRangeMinX}{Specifies the minimum value to use for the X value of the chart}

\item{chartRangeMaxX}{Specifies the maximum value to use for the X value of the chart}

\item{...}{pass additional options to list}
}
\value{
javascript call back
}
\description{
Create sparkline options js to include in column call back
}
